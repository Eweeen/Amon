/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/chat.js":
/*!******************************!*\
  !*** ./resources/js/chat.js ***!
  \******************************/
/***/ (() => {

eval("$(function () {\n  /**\n   *\n   *  VARIABLES\n   * \n   */\n  var windowWidth = window.innerWidth;\n  /**\n   *\n   *  WHEN SELECT CONV ITEM, LAUNCH AJAX REQUEST, ADD CLASS TO SHOW ACTIVE CONVERSATION\n   * \n   */\n\n  if (windowWidth < 992) {\n    $(\".item_conv\").click(function () {\n      $(\"#chat\").css(\"left\", 0);\n      RequestAjaxShowConversation($(this).attr(\"data-conv\"));\n    });\n\n    if ($(\".btn_back\")) {\n      $(\".btn_back\").click(function () {\n        $(\"#chat\").css(\"left\", \"-100%\");\n      });\n    }\n  } else {\n    $(\".item_conv\").first().addClass(\"actif_conv\");\n    $(\".item_conv\").click(function () {\n      if (!$(this).hasClass(\"actif_conv\")) {\n        $(\".item_conv\").each(function () {\n          $(\".item_conv\").removeClass(\"actif_conv\");\n        });\n        $(this).addClass(\"actif_conv\");\n        RequestAjaxShowConversation($(this).attr(\"data-conv\"));\n      }\n    });\n  }\n  /**\n   *\n   *  SHOW LIST OF NEW CONVERSATION\n   * \n   */\n\n\n  $(\".bar_add_conversation\").click(function () {\n    $(\".list_new_conv\").toggleClass(\"active_list_new_conv\");\n  });\n  /**\n   *\n   *  SHOW MODALS WITH 3 DOT BTN\n   * \n   */\n\n  $(\".btn_dot\").click(function () {\n    $(this).next().toggleClass(\"active_modal\"); // IF CLICK IS OUT OF .modal_settings_chat, THE FUNCTION DESACTIVAT MODAL\n\n    $(\".modal_bg\").click(function (event) {\n      if (!$(event.target).closest(\".modal_settings_chat\").length) {\n        $(this).removeClass(\"active_modal\");\n      }\n    });\n    $(\".modal_settings_chat\").click(function () {\n      $(this).parents().removeClass(\"active_modal\");\n    });\n  });\n  /**\n   *\n   *  AJAX REQUEST WHEN USER CLICK ON ITEM IN LIST CONVERSATION\n   * \n   */\n\n  function RequestAjaxShowConversation(data) {\n    console.log(data);\n    var dataConv = data;\n\n    if (dataConv == \"\") {// id of chat general\n      // dataConv = ;\n    }\n\n    $.ajaxSetup({\n      headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n      }\n    });\n    $.ajax({\n      type: \"POST\",\n      url: 'request',\n      data: {\n        id_conv: dataConv\n      },\n      success: function success(response) {\n        $('.profil_praticien_container').html(response);\n      },\n      error: function error(response) {\n        console.log(response);\n      }\n    });\n  }\n  /**\n   *\n   *  AJAX REQUEST WHEN USER DELETE CONVERSATION\n   * \n   */\n\n\n  $(\".delete_conversation\").click(function () {\n    console.log($(this).closest(\".item_conv\").attr(\"data-conv\"));\n    $.ajaxSetup({\n      headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n      }\n    });\n    $.ajax({\n      type: \"POST\",\n      url: 'request',\n      data: {\n        id_conv_delete: $(this).closest(\".item_conv\").attr(\"data-conv\")\n      },\n      success: function success(response) {\n        $('.profil_praticien_container').html(response);\n      },\n      error: function error(response) {\n        console.log(response);\n      }\n    });\n  });\n  /**\n   *\n   *  AJAX REQUEST WHEN USER DELETE MESSAGE\n   * \n   */\n\n  $(\".delete_message\").click(function () {\n    console.log($(this).closest(\".msg_content\").children(\"p\").attr(\"data-id-msg\"));\n    $.ajaxSetup({\n      headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n      }\n    });\n    $.ajax({\n      type: \"POST\",\n      url: 'request',\n      data: {\n        id_msg_delete: $(this).closest(\".item_conv\").attr(\"data-conv\")\n      },\n      success: function success(response) {\n        $('.profil_praticien_container').html(response);\n      },\n      error: function error(response) {\n        console.log(response);\n      }\n    });\n  });\n  /**\n   *\n   *  AJAX REQUEST WHEN USER SIGNAL MESSAGE\n   * \n   */\n\n  $(\".signal_message\").click(function () {\n    console.log($(this).closest(\".msg_content\").children(\"p\").attr(\"data-id-msg\"));\n    $.ajaxSetup({\n      headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n      }\n    });\n    $.ajax({\n      type: \"POST\",\n      url: 'request',\n      data: {\n        id_msg_signal: $(this).closest(\".msg_content\").children(\"p\").attr(\"data-id-msg\")\n      },\n      success: function success(response) {\n        $('.profil_praticien_container').html(response);\n      },\n      error: function error(response) {\n        console.log(response);\n      }\n    });\n  });\n  /**\n   *\n   *  CHAT BAR / AJAX REQUEST WHEN USER SEND MESSAGE (press enter or click on send button)\n   * \n   */\n\n  if ($(\"#chat_bar\") && $(\"#send_msg_btn\")) {\n    $(\"#chat_bar\").keydown(function (event) {\n      if (event.keyCode == 13) {\n        RequestAjaxSendMessage($(this).val());\n        $(\"#chat_bar\").val(\"\");\n      }\n    });\n    $(\"#send_msg_btn\").click(function () {\n      RequestAjaxSendMessage($(\"#chat_bar\").val());\n      $(\"#chat_bar\").val(\"\");\n    });\n  }\n\n  function RequestAjaxSendMessage(data) {\n    console.log(data);\n    $.ajaxSetup({\n      headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n      }\n    });\n    $.ajax({\n      type: \"POST\",\n      url: 'request',\n      data: {\n        id_conv: data\n      },\n      success: function success(response) {\n        $('.profil_praticien_container').html(response);\n      },\n      error: function error(response) {\n        console.log(response);\n      }\n    });\n  }\n  /**\n   *\n   *  AJAX REQUEST WHEN USER SCROLL TO TOP AND LOAD OLD MESSAGE IN CHAT\n   * \n   */\n\n  /**\n   *\n   *  LOOP TO REFRESH ACTIVE CHAT\n   * \n   */\n  // setInterval(() => {\n  //     let data = {\n  //         \"data_conv\": dataConv\n  //     }\n  //     setAjax(url, data);\n  //     $(\"#chat\").load(\"../public/ajax/get-chat.php\");\n  // }, 2000);\n\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/chat.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/chat.js"]();
/******/ 	
/******/ })()
;